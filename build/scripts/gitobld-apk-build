#!/bin/sh

set -e

. ${GITOBLD_COMMON:-true}

build_apk() {
	apk_name=$1

	if ! gitobld-ports -e "$apk_name"; then
		error "The package '$apk_name' don't exists at ports directory."
		return 1
	fi

	apk_build_args="-t"

	[ -n "$BUILD_DEPS" ] && apk_build_args="$apk_build_args -R"

	msg "Building package '$pkg'..."
	gitobld-abuild -e apk-build "$apk_build_args" $apk_name
}

usage() {
	cat <<-EOF
		Usage: $program [-d PKG_DIRECTORY] PACKAGE...
		
		Build a Alpine package

		Options:
		    -b  Force build of 'abuild' image
		    -c  Recreate containers
		    -d  Search for apks on this directory
		    -h  Show this help
		    -k  Set path to packager private key
		    -o  Set output directory
		    -p  Set path to packager public key
		    -R  Build APKBUILD depencies
		    -U  Run container with this user
	EOF

	exit 0
}

while getopts "bcd:hk:o:p:RU:" opt; do
	case $opt in
		b) BUILD_IMAGES=1 ;;
		c) FORCE_RECREATE=1 ;;
		d) PKG_DIRECTORY=$OPTARG ;;
		h) usage ;;
		k) PKG_PRIVKEY_PATH=$OPTARG ;;
		o) BUILD_OUTPUT_DIR=$OPTARG ;;
		p) PKG_PUBKEY_PATH=$OPTARG ;;
		R) BUILD_DEPS=1 ;;
		U) RUN_AS_USER=$OPTARG ;;
	esac
done

shift $((OPTIND-1))

if [ "$#" -eq 0 ]; then
	die "No packages passed to '$program' command."
fi

[ "$1" = all ] && set -- $(gitobld-library -a)

PKG_DIRECTORY=${PKG_DIRECTORY:-$PWD/ports}

PKG_PRIVKEY_PATH=${PKG_PRIVKEY_PATH:-$PWD/keys/packager_key.rsa}
PKG_PUBKEY_PATH=${PKG_PUBKEY_PATH:-$PKG_PRIVKEY_PATH.pub}

RUN_AS_USER=${RUN_AS_USER:-"$(id -u):$(id -g)"}

export RUN_AS_USER

gitobld-abuild

for pkg in $@; do
	build_apk "$pkg"
done

gitobld-abuild -s

