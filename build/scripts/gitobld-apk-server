#!/bin/sh

apk_server_run() {
	if ! gitobld-docker -qet network $GITOBLD_NETWORK; then
		echo "Creating '$GITOBLD_NETWORK' network..."

		gitobld-docker -qct network $GITOBLD_NETWORK
		export GITOBLD_NETWORK
		gitobld-env -w
	fi

	gitobld-docker -b $APK_SERVER_IMAGE build/apk-server

	runargs=""
	http_root=/app/apk_server

	[ -n "$PKG_PUBKEY_PATH" ] &&
		runargs="$runargs --mount type=bind,src=$PKG_PUBKEY_PATH,dst=$http_root/${PKG_PUBKEY_PATH##*/},readonly"

	[ -n "$GITOBLD_NETWORK" ] && runargs="$runargs --network $GITOBLD_NETWORK"

	if [ -n "$REPOSITORY_PATH" ]; then
		runargs="$runargs --mount type=bind,src=$(gitobld-realpath $REPOSITORY_PATH),dst=$http_root/packages,readonly"
	else
		runargs="$runargs --mount src=$GITOBLD_VOLUME,dst=$http_root/packages,readonly"
	fi

	gitobld-docker -xef "$APK_SERVER_HOST" $runargs "$APK_SERVER_IMAGE"
	APK_SERVER_CONTAINER=$(gitobld-docker -it container $APK_SERVER_HOST)

	export APK_SERVER_CONTAINER
	gitobld-env -w
}

apk_server_stop() {
	[ -z "$APK_SERVER_CONTAINER" ] && return 1

	echo "Stopping container '"$APK_SERVER_CONTAINER"'..."
	gitobld-docker -qs stopped $APK_SERVER_CONTAINER
}

APK_SERVER_IMAGE=${APK_SERVER_IMAGE:-gitobioinformatics/apk-server}
APK_SERVER_HOST=${APK_SERVER_HOST:-gitobld-apk-server.local}

PKG_PUBKEY_PATH=${PKG_PUBKEY_PATH:-$PWD/keys/packager_key.rsa.pub}

GITOBLD_VOLUME=${GITOBLD_VOLUME:-gitobld-volume}
GITOBLD_NETWORK=${GITOBLD_NETWORK:-gitobld-network}

opt=${1:-'-r'}

case $opt in
	-r) apk_server_run ;;
	-s) apk_server_stop ;;
esac

