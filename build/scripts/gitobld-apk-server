#!/bin/sh

set -e

if [ -f "$GITOBLD_COMMON" ]; then
	. "$GITOBLD_COMMON"
fi

apk_server_run() {
	if ! gitobld-docker -qet network "$GITOBLD_NETWORK"; then
		echo "Creating '$GITOBLD_NETWORK' network..."
		gitobld-docker -qct network "$GITOBLD_NETWORK"
	fi

	gitobld-docker -be $rebuild_image_opt "$APK_SERVER_IMAGE" build/apk-server

	run_args="--detach --rm"
	http_root=/app/apk_server

	run_args="$run_args --network $GITOBLD_NETWORK"

	[ -n "$PUBKEY_PATH" ] &&
		run_args="$run_args --mount type=bind,src=$PUBKEY_PATH,dst=$http_root/${PUBKEY_PATH##*/},readonly"

	if [ -n "$repository_path" ]; then
		run_args="$run_args --mount type=bind,src=$repository_path,dst=$http_root/packages,readonly"
	else
		run_args="$run_args --mount src=$GITOBLD_VOLUME,dst=$http_root/packages,readonly"
	fi

	gitobld-docker -xe $force_recreate_opt "$APK_SERVER_HOST" $run_args "$APK_SERVER_IMAGE"
}

apk_server_stop() {
	container_id=$(gitobld-docker -it container "$APK_SERVER_HOST")

	if [ -n "$container_id" ] ; then
		echo "Stopping container '"$APK_SERVER_HOST"'..."
		gitobld-docker -qs stopped "$container_id"
	fi
}

apk_server_delete() {
	container_id=$(gitobld-docker -it container "$APK_SERVER_HOST")

	if [ -n "$container_id" ]; then
		gitobld-docker -def "$container_id"
	fi
}

while getopts "bcdrR:s" opt; do
	case $opt in
		b) rebuild_image_opt='-f' ;;
		c) force_recreate_opt='-f' ;;
		d) command_opt='-d' ;;
		r) command_opt='-r' ;;
		R) repository_path=$OPTARG ;;
		s) command_opt='-s' ;;
	esac
done

shift $((OPTIND-1))

command_opt=${command_opt:-'-r'}

case "$command_opt" in
	'-d') apk_server_delete ;;
	'-r') apk_server_run ;;
	'-s') apk_server_stop ;;
esac

